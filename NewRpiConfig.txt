
NEW UPDATE for RPI 3 using 2017-03-02-raspbian-jessie:
A) put raspbian on the sdcard.  I found a tool called "Etcher" 
   to make this easy. https://etcher.io/ .  I've also successfully used
   Win32DiskImager.

B) Configure the raspbian so it works headless.
 1) Wifi by creating wpa_supplicant.conf in the root of the /boot partition.
    - Be sure this uses unix-style line endings.
    - Skeleton contents of the file are as simple as:

network={
    ssid="YOUR_SSID"
    psk="YOUR_PASSWORD"
    key_mgmt=WPA-PSK
}

 2) Enable SSH.  This is as simple as placing a file named 'ssh' into the 
    root of the /boot partition.  Contents don't matter.
 3) Set static IP address, OR somehow discover the DHCP address.  
  3a) To scan, try nmap -sn 192.168.0.0/24 from a linux boot somewhere.  
      (Of course sub out the first 3 numbers of 192.168.0 for your address)
      You may have to do this twice, once with and once without the rpi on, 
      and look for a difference.  This also worked well:
> nmap -sn 192.168.0.0/24 | grep pi
  3b) To set it static... I dunno.  Look it up in google or something.
 4) Turn off serial port.
    Remove any "console=ttyAMA0,XXX" or "console=serial0,XXX" entried in
    /boot/cmdline.txt
C) SSH in.  Username pi, password raspberry.

D) Update packages. 
sudo apt-get update
sudo apt-get -y upgrade
sudo reboot

E) Set up rasp pi settings - condensed version.  See below for more details
sudo systemctl set-default multi-user.target
sudo ln -fs /lib/systemd/system/getty@.service /etc/systemd/system/getty.target.wants/getty@tty1.service
sudo sed -i /boot/cmdline.txt -e "s/console=ttyAMA0,[0-9]\+ //"
sudo sed -i /boot/cmdline.txt -e "s/console=serial0,[0-9]\+ //"
sudo cp /usr/share/zoneinfo/US/Pacific-New /etc/localtime

F) Make yourself a new user / pass / etc
sudo useradd xbtherm
sudo mkdir /home/xbtherm
sudo chown xbtherm.xbtherm /home/xbtherm
sudo usermod -a -G dialout xbtherm
sudo usermod -a -G gpio xbtherm
sudo usermod -a -G www-data xbtherm
sudo usermod -a -G sudo xbtherm
sudo passwd xbtherm

G) Change the password of the pi user already
sudo passwd pi

VALIDATE FROM HERE DOWN
H) Load the necessary packages. Use the following:
sudo apt-get update
sudo apt-get -y install libmysql++-dev libboost-dev libboost-program-options-dev cmake libcurl4-openssl-dev git mysql-server
     (don't forget the pass you pick)

I) Next set up the web server.  This is big enough that it calls
   for its own file.  See WebServerSetup.txt.

--- EXPANDED DISCUSSION OF SETTING UP RPI SETTINGS ---

E) Set up rasp pi settings.
> sudo raspi-config
 1) Boot options - Desktop / CLI - choose B1 Console, requiring user to login
 2) Interfacing Options - P6 Serial - Disable login shell and disable serial port
 3) SKIP THIS STEP - it seems to corrupt a bunch of stuff.
    Localization Options - Change Locale. Uncheck en_GB.UTF-8.  
    Check en_US.UTF-8.  Pick en_US.UTF-8 as default language.
 4) Localization Options - Set timezone.  Figure this out yourself.
 5) Finish and reboot.

E OPTIONAL (works on rpi3 at least?)
0) Condensed all below to something you can copy/paste into a command line
sudo systemctl set-default multi-user.target
sudo ln -fs /lib/systemd/system/getty@.service /etc/systemd/system/getty.target.wants/getty@tty1.service
sudo sed -i /boot/cmdline.txt -e "s/console=ttyAMA0,[0-9]\+ //"
sudo sed -i /boot/cmdline.txt -e "s/console=serial0,[0-9]\+ //"
// SKIP THESE TWO - they seem to corrupt perl or something
// sudo update-locale LANG="en_US.UTF-8" LANGUAGE="en_US:en" LC_ALL="en_US.UTF-8"
// sudo locale-gen en_US.UTF-8
sudo cp /usr/share/zoneinfo/US/Pacific-New /etc/localtime

1) Boot to console:
sudo systemctl set-default multi-user.target
sudo ln -fs /lib/systemd/system/getty@.service /etc/systemd/system/getty.target.wants/getty@tty1.service
2) Set serial port
(Note you can skip this step if you did it above before you first booted the pi)
sudo sed -i /boot/cmdline.txt -e "s/console=ttyAMA0,[0-9]\+ //"
sudo sed -i /boot/cmdline.txt -e "s/console=serial0,[0-9]\+ //"
(And, if it was ever enabled, you should remove the "enable_uart" line from /boot/config.txt)
You'll need to reboot after this for the serial settings to take effect.
3) Set Locale
sudo update-locale LANG="en_US.UTF-8" LANGUAGE="en_US:en" LC_ALL="en_US.UTF-8"
sudo locale-gen en_US.UTF-8
4) Set timezone
sudo cp /usr/share/zoneinfo/US/Pacific-New /etc/localtime


--------------------------------


FROM SCRATCH (older version):
A) put raspbian on the sdcard.  (all this is tested with 
   2015-02-16-raspbian-wheezy)
B) Use the standard rpi-config that comes up on first boot to: 
 1) Expand filesystem
 2) Stay on command line default boot
 3) Set locale to en_US.UTF-8  (space to de-select en_GB, space to select 
    en_US.UTF-8, then enter)
    Internationalisation Options - Change Locale
 4) Set the timezone
    Internationalisation Options - Change Timezone
 5) Set the keyboard
    Internationalisation Options - Change Keyboard Layout
    Pick something like "Generic 101-key PC"
    Pick "Other"
    Drop to "English (US)"
    Then pick "English (US)" again
    Pick defaults for the rest
 6) Advanced options - SSH - enable
 7) Advanced options - Serial - disable 
 8) Finish, reboot
C) Set up the wifi 
 1) Find the wifi network details:
    > sudo iwlist wlan0 scan
    Look for the SSID of your router - it'll look like:
    ESSID:"YOURLAN"
 2) Edit the wpa_supplicant.conf file
    > sudo nano /etc/wpa_supplicant/wpa_supplicant.conf
 3) Go to the bottom of the file and add, then save and exit:
network={
    ssid="The_ESSID_from_earlier"
    psk="Your_wifi_password"
}
 4) It should just work after a second or two.  If not, drop and 
    rais the lan with:
    > sudo ifdown wlan0
    > sudo ifup wlan0
 5) You can tell if it works with the following.  It will show an IP
    address if it works.
    > ifconfig wlan0
 6) Turn off power saving on the wifi dongle. 
    > sudo nano /etc/modprobe.d/8192cu.conf
    Make it say this (including a newline at the end)
#Disable power management
options 8192cu rtw_power_mgnt=0 rtw_enusbss=0

D) Set a static IP
 1) Edit /etc/network/interfaces
    > sudo nano /etc/network/interfaces
 2) Edit the last line from:
iface default inet dhcp
    to
iface default inet static
 3) Add the following to the bottom (replacing the X's, of course):
address X.X.X.X
netmask 255.255.255.0
gateway X.X.X.X
 4) reboot
    > sudo reboot
E) From here on out, you can ditch the keyboard / monitor and ssh in
   to do the rest of the configuration
F) Make yourself a new user / pass / etc
   > sudo useradd USERNAME
   > sudo passwd USERNAME
   > sudo mkdir /home/USERNAME
   > sudo chown USERAME.USERNAME /home/USERNAME
   > sudo usermod -a -G dialout USERNAME
   > sudo usermod -a -G gpio USERNAME
   > sudo usermod -a -G www-data USERNAME
G) Add yourself to sudoers
   > sudo nano /etc/sudoers
   Make a new line at the end that matches the "pi" line, but sub 
   out "pi" for your USERNAME
H) Set up nptd
 1) sudo nano /etc/ntp.conf
    Change the following line:
#server ntp.your-provide.example
    to
server ntp.timeserver.com
 2) Use the following to instantly set the time
   > sudo ntpd -qg
I) Load the necessary packages. Use the following:
sudo apt-get update
sudo apt-get install libmysql++-dev
sudo apt-get install libboost-dev
sudo apt-get install libboost-program-options-dev
sudo apt-get install cmake
sudo apt-get install libcurl4-openssl-dev
sudo apt-get install mysql-server  (don't forget the pass you pick)
J) Next set up the web server.  This is big enough that it calls
   for its own file.  See WebServerSetup.txt.

The RPI is now set up!
